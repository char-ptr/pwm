//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.12

use super::sea_orm_active_enums::WebsiteMatchDetection;
use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "vault_website_entry")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub website_id: i32,
    pub item_id: Uuid,
    pub uri: String,
    pub match_detection: Option<WebsiteMatchDetection>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::vault_item::Entity",
        from = "Column::ItemId",
        to = "super::vault_item::Column::ItemId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    VaultItem,
}

impl Related<super::vault_item::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::VaultItem.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
